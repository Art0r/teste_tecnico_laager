worker_processes auto;

events {
    worker_connections 4096;
    multi_accept on;
    accept_mutex off;
}

http {

    upstream backend {
        least_conn;
        server application-backend:3000 max_fails=3 fail_timeout=30s;
    }

    upstream frontend {
        least_conn;
        server application-frontend:80 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 9999 reuseport;
        listen [::]:9999 reuseport;
        server_name balancer;

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            proxy_redirect off;
            proxy_buffering off;

            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        location /api/ {
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 8s;
        }

        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }
    }
}